events {}

http {
    log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"Authorization: $http_authorization" '
                      '"X-Debug-Auth-Token: $auth_token"';

    access_log /var/log/nginx/access.log custom;

    map $http_cookie $auth_token {
        default "";
        "~*access_token=([^;]+)" $1;
    }

    upstream auth_service {
        server auth_service:8000;
    }

    upstream video_service {
        server video_service:8000;
    }

    upstream comment_service {
        server comment_service:8000;
    }

    upstream notification_service {
        server notification_service:8000;
    }

    server {
        listen 8080;
        server_name localhost;


        # Проксирование для auth_service
        location /user/ {
            proxy_pass http://auth_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header X-Debug-Auth-Token $auth_token always;
            proxy_set_header Authorization "Bearer $auth_token";
        }

        # Проксирование для video_service
        location /video/ {

            # Add CORS headers
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization, X-Requested-With';

            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization, X-Requested-With';
                return 204;
            }

            proxy_pass http://video_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header X-Debug-Auth-Token $auth_token always;
            proxy_set_header Authorization "Bearer $auth_token";
                
            # Log to ensure token forwarding
            access_log /var/log/nginx/video_access.log custom;
        }


        # Проксирование для comment_service
        location /comment/ {
            proxy_pass http://comment_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header X-Debug-Auth-Token $auth_token always;
            proxy_set_header Authorization "Bearer $auth_token";
        }

        # Проксирование для notification_service
        location /notification/ {
            proxy_pass http://notification_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header X-Debug-Auth-Token $auth_token always;
            proxy_set_header Authorization "Bearer $auth_token";
        }

    }
}
